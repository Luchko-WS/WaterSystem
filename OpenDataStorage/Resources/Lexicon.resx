<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello {0}!</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeYourPassword" xml:space="preserve">
    <value>Change your password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="ChangeYourPersonalAccountSettings" xml:space="preserve">
    <value>Change your personal account settings</value>
  </data>
  <data name="AccountManagement" xml:space="preserve">
    <value>Account management</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="LastChangedDate" xml:space="preserve">
    <value>Last changed date</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoDescription" xml:space="preserve">
    <value>No description</value>
  </data>
  <data name="YourPasswordHasBeenChanged" xml:space="preserve">
    <value>Your password has been changed.</value>
  </data>
  <data name="YourPasswordHasBeenSet" xml:space="preserve">
    <value>Your password has been set.</value>
  </data>
  <data name="AnErrorHasOccurred" xml:space="preserve">
    <value>An error has occurred.</value>
  </data>
  <data name="YourInformationIsSaved" xml:space="preserve">
    <value>Your information is saved.</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="PasswordLengthErrorMessage" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="PasswordCompareErrorMessage" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
  <data name="RememberMeQuestion" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RequiredErrorMessage" xml:space="preserve">
    <value>Required field {0}</value>
  </data>
  <data name="RegisterAsANewUser" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ExtendedSearch" xml:space="preserve">
    <value>Extended search</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CommonErrorMessage" xml:space="preserve">
    <value>An error occurred! Try again later.</value>
  </data>
  <data name="ClearUp" xml:space="preserve">
    <value>Clear up</value>
  </data>
  <data name="NothingToShow" xml:space="preserve">
    <value>Nothing to show</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>{0} - VNTU, Vinnytsia, Ukraine</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>WATER STATE</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="ServiceSync" xml:space="preserve">
    <value>Synchronization with services</value>
  </data>
  <data name="Sync" xml:space="preserve">
    <value>Synchronize</value>
  </data>
  <data name="SystemManagement" xml:space="preserve">
    <value>System management</value>
  </data>
  <data name="UsersManagement" xml:space="preserve">
    <value>Users management</value>
  </data>
  <data name="RolesManagement" xml:space="preserve">
    <value>Roles management</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Registered" xml:space="preserve">
    <value>Registered</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="LoginTime" xml:space="preserve">
    <value>Login time</value>
  </data>
  <data name="PasswordForUserChanged" xml:space="preserve">
    <value>The password for the user has been changed</value>
  </data>
  <data name="UserAddedToRole" xml:space="preserve">
    <value>User added to the role</value>
  </data>
  <data name="UserRemovedFromRole" xml:space="preserve">
    <value>User removed from role</value>
  </data>
  <data name="RemoveUser" xml:space="preserve">
    <value>Remove user</value>
  </data>
  <data name="RemoveUserQuestion" xml:space="preserve">
    <value>Do you want to remove this user?</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Locked out</value>
  </data>
  <data name="LockedOutMessage" xml:space="preserve">
    <value>This account has been locked out, please try again later.</value>
  </data>
  <!-- Folder -->
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="CreateFolder" xml:space="preserve">
    <value>Create folder</value>
  </data>
  <data name="EditFolder" xml:space="preserve">
    <value>Edit folder</value>
  </data>
  <data name="RemoveFolder" xml:space="preserve">
    <value>Remove folder</value>
  </data>
  <data name="AccountLoginMissingUser" xml:space="preserve">
    <value>User with this login doesn't exist.</value>
  </data>
  <!-- Characteristics -->
  <data name="Characteristic" xml:space="preserve">
    <value>Characteristic</value>
  </data>
  <data name="Characteristics" xml:space="preserve">
    <value>Characteristics</value>
  </data>
  <data name="CreateCharacteristic" xml:space="preserve">
    <value>Create сharacteristic</value>
  </data>
  <data name="EditCharacteristic" xml:space="preserve">
    <value>Edit сharacteristic</value>
  </data>
  <data name="SelectCharacteristic" xml:space="preserve">
    <value>Select characteristic</value>
  </data>
  <data name="RemoveCharacteristic" xml:space="preserve">
    <value>Remove characteristic</value>
  </data>
  <data name="RemoveCharacteristicQuestion" xml:space="preserve">
    <value>Do you want to remove this characteristic?</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Types</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <!-- Object Type -->
  <data name="ObjectType" xml:space="preserve">
    <value>Object type</value>
  </data>
  <data name="ObjectTypes" xml:space="preserve">
    <value>Object types</value>
  </data>
  <data name="CreateType" xml:space="preserve">
    <value>Create object type</value>
  </data>
  <data name="EditType" xml:space="preserve">
    <value>Edit object type</value>
  </data>
  <data name="SelectType" xml:space="preserve">
    <value>Select object type</value>
  </data>
  <data name="RemoveType" xml:space="preserve">
    <value>Remove object type</value>
  </data>
  <data name="RemoveTypeQuestion" xml:space="preserve">
    <value>Do you want to remove this object type?</value>
  </data>
  <!-- Objects -->
  <data name="Object" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="Objects" xml:space="preserve">
    <value>Objects</value>
  </data>
  <data name="CreateObject" xml:space="preserve">
    <value>Create object</value>
  </data>
  <data name="EditObject" xml:space="preserve">
    <value>Edit object</value>
  </data>
  <data name="SelectObject" xml:space="preserve">
    <value>Select object</value>
  </data>
  <data name="RemoveObject" xml:space="preserve">
    <value>Remove object</value>
  </data>
  <data name="RemoveObjectQuestion" xml:space="preserve">
    <value>Do you want to remove this object?</value>
  </data>
  <!--Value-->
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="CreateValue" xml:space="preserve">
    <value>Create value</value>
  </data>
  <data name="EditValue" xml:space="preserve">
    <value>Edit value</value>
  </data>
  <data name="RemoveValue" xml:space="preserve">
    <value>Remove value</value>
  </data>
  <data name="RemoveValueQuestion" xml:space="preserve">
    <value>Do you want to remove this value?</value>
  </data>
  <data name="SubjectOfMonitoring" xml:space="preserve">
    <value>The subject of monitoring</value>
  </data>
</root>